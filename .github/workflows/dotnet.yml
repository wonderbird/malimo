name: .NET

# Save energy - only build main branch updates
on:
  push:

env:
  RETENTION_DAYS: 1

jobs:
  publish-macos:
    name: Publish macOS
    
    strategy:
      matrix:
        runtime:
          - osx.12-arm64
          - osx.12-x64

    env:
      PUBLISH_DIR: markdown-linked-images-mover.${{ matrix.runtime }}
      PUBLISH_ZIP_FILENAME: markdown-linked-images-mover.${{ matrix.runtime }}.bottle.zip
      NOTARIZE_LOG_FILENAME: notarize_log.${{ matrix.runtime }}.json

    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Create application
        run: |
          dotnet publish MarkdownLinkedImagesMover/MarkdownLinkedImagesMover.csproj --configuration Release --runtime "${{ matrix.runtime }}" --self-contained true -p:PublishSingleFile=true --output "${{ env.PUBLISH_DIR }}"

      - name: Prepare release files
        run: |
          rm -vf "${{ env.PUBLISH_DIR }}/MarkdownLinkedImagesMover.pdb" "${{ env.PUBLISH_DIR }}/MarkdownLinkedImagesMover.xml"
          chmod +x "${{ env.PUBLISH_DIR }}/MarkdownLinkedImagesMover"

      - name: Zip application
        run: |
          ditto -c --sequesterRsrc -k -V "${{ env.PUBLISH_DIR }}" "${{ env.PUBLISH_ZIP_FILENAME }}"

      - name: Attach application to build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PUBLISH_ZIP_FILENAME }}
          path: ${{ env.PUBLISH_ZIP_FILENAME }}
          retention-days: ${{ env.RETENTION_DAYS }}

  publish-win:
    name: Publish Windows
    
    strategy:
      matrix:
        runtime:
          - win-x64
    
    env:
      PUBLISH_DIR: markdown-linked-images-mover.${{ matrix.runtime }}

    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Create application
        run: |
          dotnet publish MarkdownLinkedImagesMover/MarkdownLinkedImagesMover.csproj --configuration Release --runtime "${{ matrix.runtime }}" --self-contained true -p:PublishSingleFile=true --output "${{ env.PUBLISH_DIR }}"

      - name: Prepare release files
        if: runner.os == 'Windows'
        run: |
          del "${{ env.PUBLISH_DIR }}\MarkdownLinkedImagesMover.pdb"
          del "${{ env.PUBLISH_DIR }}\MarkdownLinkedImagesMover.xml"

      - name: Attach application to build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PUBLISH_DIR }}
          path: ${{ env.PUBLISH_DIR }}/*
          retention-days: ${{ env.RETENTION_DAYS }}

  release:
    name: Release
    needs: [publish-macos, publish-win]
    
    runs-on: ubuntu-latest
    
    # Configure GITHUB_TOKEN so that it allows uploading to the release
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v3
    
      - uses: actions/download-artifact@v3
        
      - name: Create release folder
        run: mkdir release
        
      - name: ZIP Windows application
        run: zip -r9 release/markdown-linked-images-mover.win-x64.zip markdown-linked-images-mover.win-x64/*
        
      - name: Move macOS ZIPs to release folder
        run: |
          mv markdown-linked-images-mover.osx.12-arm64.bottle/markdown-linked-images-mover.osx.12-arm64.bottle.zip ./release/  
          mv markdown-linked-images-mover.osx.12-x64.bottle/markdown-linked-images-mover.osx.12-x64.bottle.zip ./release/
