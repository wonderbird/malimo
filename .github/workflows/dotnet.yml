name: .NET

# Save energy - only build main branch updates
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  RETENTION_DAYS: 5

jobs:
  determine_version:
    uses: ./.github/workflows/_determine_version.yml

  test:
    uses: ./.github/workflows/_unit_tests.yml
    with:
      retention_days: 5

  publish_macos:
    name: Publish macOS
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [determine_version, test]
    
    strategy:
      matrix:
        runtime:
          - osx.12-arm64
          - osx.12-x64

    env:
      PUBLISH_DIR: malimo.${{ matrix.runtime }}
      PUBLISH_ZIP_FILENAME: malimo.${{ matrix.runtime }}.bottle.zip
      NOTARIZE_LOG_FILENAME: notarize_log.${{ matrix.runtime }}.json

    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Create application
        run: |
          dotnet publish malimo/malimo.csproj --configuration Release --runtime "${{ matrix.runtime }}" --self-contained true -p:PublishSingleFile=true -p:Version=${{ needs.determine_version.outputs.assembly_version }} --output "${{ env.PUBLISH_DIR }}"

      - name: Prepare release files
        run: |
          rm -vf "${{ env.PUBLISH_DIR }}/malimo.pdb"
          chmod +x "${{ env.PUBLISH_DIR }}/malimo"

      - name: Add cert to keychain
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_ID_APP_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.APPLE_DEVELOPER_ID_APP_CERTIFICATE_PASSWORD }}

      - name: Sign application
        run: |
          /bin/sh ./build/SignMac.sh "${{ env.PUBLISH_DIR }}/malimo" "Developer ID Application: Stefan Boos" "./build/entitlements.plist"

      - name: ZIP application
        run: |
          ditto -c --sequesterRsrc -k -V "${{ env.PUBLISH_DIR }}" "${{ env.PUBLISH_ZIP_FILENAME }}"

      - name: Notarize application
        run: |
          /bin/sh ./build/Notarize.sh "xpdbumm@boos.systems" "${{ secrets.APPLE_ID_APP_SPECIFIC_PASSWORD }}" "M9YN683HBZ" "${{ env.PUBLISH_ZIP_FILENAME }}"

      - name: Attach notarize log to build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.NOTARIZE_LOG_FILENAME }}
          path: ./notarize_log.json
          retention-days: ${{ env.RETENTION_DAYS }}
          
      - name: Attach application to build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PUBLISH_ZIP_FILENAME }}
          path: ${{ env.PUBLISH_ZIP_FILENAME }}
          retention-days: ${{ env.RETENTION_DAYS }}

  publish_win:
    name: Publish Windows
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [determine_version, test]
    
    strategy:
      matrix:
        runtime:
          - win-x64
    
    env:
      PUBLISH_DIR: malimo.${{ matrix.runtime }}
      PUBLISH_ZIP_FILENAME: malimo.${{ matrix.runtime }}.zip

    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Create application
        run: |
          dotnet publish malimo/malimo.csproj --configuration Release --runtime "${{ matrix.runtime }}" --self-contained true -p:PublishSingleFile=true -p:Version=${{ needs.determine_version.outputs.assembly_version }} --output "${{ env.PUBLISH_DIR }}"

      - name: ZIP application
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          path: ${{ env.PUBLISH_DIR }}
          filename: ${{ env.PUBLISH_ZIP_FILENAME }}
          exclusions: '*.pdb'

      - name: Attach application to build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PUBLISH_ZIP_FILENAME }}
          path: ${{ env.PUBLISH_ZIP_FILENAME }}
          retention-days: ${{ env.RETENTION_DAYS }}

      - name: Prepare Chocolatey configuration
        run: pwsh ./build/ReplaceVariablesInChocolateyConfiguration.ps1 -version ${{ needs.determine_version.outputs.semantic_version }} -zipFile ${{ env.PUBLISH_ZIP_FILENAME }}

      - name: Create Chocolatey package
        run: choco pack ./chocolatey/malimo.nuspec

      - name: Attach Chocolatey package to build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: malimo.${{ needs.determine_version.outputs.semantic_version }}.nupkg
          path: malimo.${{ needs.determine_version.outputs.semantic_version }}.nupkg
          retention-days: ${{ env.RETENTION_DAYS }}
    
  release:
    name: Release
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [determine_version, test, publish_macos, publish_win]
    
    runs-on: windows-latest
    
    defaults:
      run:
        shell: bash
    
    # Configure GITHUB_TOKEN so that it allows uploading to the release
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v3
    
      - uses: actions/download-artifact@v3
        
      - name: Create release folder
        run: mkdir release
        
      - name: Move ZIPs to release folder
        run: |
          mv -v malimo.osx.12-arm64.bottle.zip/malimo.osx.12-arm64.bottle.zip ./release/  
          mv -v malimo.osx.12-x64.bottle.zip/malimo.osx.12-x64.bottle.zip ./release/
          mv -v malimo.win-x64.zip/malimo.win-x64.zip ./release/
          mv -v malimo.${{ needs.determine_version.outputs.semantic_version }}.nupkg/malimo.${{ needs.determine_version.outputs.semantic_version }}.nupkg ./release/

      # Adopted from https://github.com/svenstaro/upload-release-action
      - name: Read CHANGELOG.md and use it as a body of new release
        id: read_release
        run: |
          r=$(cat CHANGELOG.md)                             # <--- Read CHANGELOG.md
          r="${r//'%'/%25}"                                 # Multiline escape sequences for %
          r="${r//$'\n'/%0A}"                               # Multiline escape sequences for '\n'
          r="${r//$'\r'/%0D}"                               # Multiline escape sequences for '\r'
          echo "RELEASE_BODY=$r" >> $GITHUB_OUTPUT          # <--- Set environment variable

      - name: Upload applications to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: release/*
          tag: ${{ github.ref }}
          overwrite: true
          body: ${{ steps.read_release.outputs.RELEASE_BODY }}

      - name: Push Chocolatey package
        run: |
          choco apikey --key ${{ secrets.CHOCO_API_KEY }} --source https://push.chocolatey.org/
          choco push ./release/malimo.${{ needs.determine_version.outputs.semantic_version }}.nupkg --source https://push.chocolatey.org/
